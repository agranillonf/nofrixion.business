---
#------------------------------------------------------------------------------
#
# Filename: aws-prod-business-js-build-push.yml
#
# Description: Deploy web components to PROD CDN.
#
# Usage: run from devops pipeline
#
# Author: Axel Granillo (axel@nofrixion.com)
#
# History:
# 10 August     2023  Axel Granillo   Created, Mexico City, Mexico
#-----------------------------------------------------------------------------

pr: none # don't run on PR
trigger:
  - none

variables:
  webComponentsBundleName: 'nofrixion-webcomponents.js'
  businessBundleName: 'nofrixion-business.js'

# A windows agent is required here as the AzureFileCopy@4 task is windows only.
pool:
  vmImage: 'ubuntu-latest'

steps:
  - bash: |
      # get business package version from package.json file
      version=$(cat apps/package.json | jq -r '.version')
      echo "Business version is: $version"
      echo "##vso[task.setvariable variable=versionedBusinessBundleName;]nofrixion-business-v${version}.min.js"
    displayName: 'set business.js bundle names'

  - bash: |
      # get web components package version from package.json file
      version=$(cat packages/web-components/package.json | jq -r '.version')
      echo "Web components version is: $version"
      echo "##vso[task.setvariable variable=versionedWebComponentsBundleName;]nofrixion-webcomponents-v${version}.min.js"
    displayName: 'set web-components.js bundle names'

  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'npm install'

  - script: |
      npm run build
    displayName: 'npm build'

  - script: |
      mkdir dist
      cd dist
      mkdir js
      cd ..
      cp apps/dist/*.js dist/js/$(businessBundleName)
      mv apps/dist/*.js "dist/js/$(versionedBusinessBundleName)"
      cp packages/web-components/dist/*.js dist/js/$(webComponentsBundleName)
      mv packages/web-components/dist/*.js "dist/js/$(versionedWebComponentsBundleName)"
    displayName: 'Rename bundles'

  # Creates folder structure for blob container
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/dist'
      contents: '**'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: 'Copy js files'

  # Copy .js files to the $web container.
  - task: AzureCLI@2
    displayName: Copy bundle into $web blob container
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az storage blob upload-batch -s "$(Build.ArtifactStagingDirectory)" -d '$web' --account-name "$(storageAccountName)" --overwrite

  # Purge CDN endpoint to remove old version
  - task: AzureCLI@2
    displayName: Purge CDN endpoint
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az cdn endpoint purge -g "$(cdnRg)" -n "$(cdnName)" --profile-name "$(cdnProfileName)" --content-paths '/$(webComponentsBundleName)' '/$(businessBundleName)'
